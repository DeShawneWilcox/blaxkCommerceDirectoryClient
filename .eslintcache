[{"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx":"1","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts":"2","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx":"3","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx":"4","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx":"5","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx":"6","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx":"7","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx":"8","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx":"9","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ReviewCard.tsx":"10","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/EditReview.tsx":"11","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/DeleteReview.tsx":"12","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/Business.tsx":"13","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/CreateBusiness.tsx":"14","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/ViewBusiness.tsx":"15","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/BusinessCard.tsx":"16"},{"size":547,"mtime":1612043846992,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608250685458,"results":"19","hashOfConfig":"18"},{"size":3443,"mtime":1612305093183,"results":"20","hashOfConfig":"18"},{"size":4572,"mtime":1612307553941,"results":"21","hashOfConfig":"18"},{"size":1714,"mtime":1612307814516,"results":"22","hashOfConfig":"18"},{"size":2157,"mtime":1612303183156,"results":"23","hashOfConfig":"18"},{"size":3186,"mtime":1612301593671,"results":"24","hashOfConfig":"18"},{"size":1900,"mtime":1612292347198,"results":"25","hashOfConfig":"18"},{"size":3487,"mtime":1612304903163,"results":"26","hashOfConfig":"18"},{"size":2330,"mtime":1612304981121,"results":"27","hashOfConfig":"18"},{"size":3502,"mtime":1612305051005,"results":"28","hashOfConfig":"18"},{"size":1200,"mtime":1612035841378,"results":"29","hashOfConfig":"18"},{"size":2667,"mtime":1612237932635,"results":"30","hashOfConfig":"18"},{"size":4966,"mtime":1612300343364,"results":"31","hashOfConfig":"18"},{"size":1927,"mtime":1612027972679,"results":"32","hashOfConfig":"18"},{"size":3444,"mtime":1612299227529,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"kfu6vx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx",[],["75","76"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx",["77","78","79","80","81","82","83","84"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx",["85","86"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx",["87","88","89","90"],"import React from 'react'\nimport { Button, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport Review from '../Reviews/Review'\n\ntype MenuProps = {\n    reviseToken: (newToken: string) => void,\n    clearToken: (e: any) => void,\n    sessionToken: string,\n    token: string\n    \n}\n\n\n\n\n\n\nclass Menu extends React.Component<MenuProps,{}> {\n    constructor(props:MenuProps) {\n        super(props)\n    }\n\n    \n    render() {\n        return (\n            <Router>\n                <div className=\"menu\">\n                    <Button className=\"menubutton\"  size=\"lg\"><Link to=\"/\">Home</Link></Button>\n                    <Button className=\"menubutton\" size=\"lg\"><Link to=\"SignUp\">Sign Up</Link></Button>\n                    <Button className=\"menubutton\" size=\"lg\"><Link to=\"SignIn\">Sign In</Link></Button>\n                    <Button className=\"menubutton\" size=\"lg\" onClick={this.props.clearToken}>Logout</Button>\n                </div>\n                <div className=\"menu-route\">\n                    <Switch>\n                        <Route exact path=\"/\"></Route>\n                        <Route exact path=\"/signup\"><SignUp token={this.props.token}sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                        <Route exact path=\"/signin\"><SignIn token={this.props.token} sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                    </Switch>\n                </div>\n\n\n            </Router>\n        )\n    }\n}\n\nexport default Menu;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx",["91","92","93","94","95"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { tokenToString } from 'typescript';\nimport ViewReview from './ViewReview';\nimport CreateReview from './CreateReview';\nimport { Button, Modal, Row, Col, Container } from 'reactstrap';\nimport { stringify } from 'querystring';\n\n\ntype ReviewProps = {\n    businessid: any,\n    token: string,\n    \n}\n\ntype ReviewState = {\n    addReview: boolean,\n    review: any,\n    reviewid: number,\n    title: string,\n    entry: string,\n    \n}\n\n\n\nclass Review extends React.Component<ReviewProps, ReviewState> {\n    constructor(props: ReviewProps) {\n        super(props);\n        this.state = {\n            addReview: false,\n            review: '',\n            reviewid: 0,\n            title: '',\n            entry: '',\n            \n        \n        }\n        \n         \n    }\n\n    clickAddReview = () => {\n         \n            this.setState({\n                addReview: true\n            })\n        \n    }\n\n    clickViewReview = () => {\n        \n            this.setState({\n                addReview: false\n            })\n            \n    \n\n    }\n\n    \n\n\n\n    render(): any {\n        return (\n            <div className=\"jumbotron\">\n                <Container>\n\n                {this.state.addReview === false ?\n                    <div>\n                        \n                        <Row>\n                        <Button  color=\"primary\" className=\"ReviewsButtons\"onClick= {this.clickAddReview}> Reviews</Button>\n                        <CreateReview businessid={this.props.businessid} token={this.props.token} />\n                        </Row>\n                        \n                    </div>\n\n                    :\n\n                    <div>\n                       \n                        <Row>\n                        <Button size=\"sm\" color=\"primary\" className=\"ExitButton\" onClick={this.clickViewReview}>Exit</Button>\n                        <ViewReview businessid= {this.props.businessid} token={this.props.token} />\n                        </Row>\n                    </div>\n\n                }\n</Container>\n            </div>\n\n\n\n\n        )\n\n\n\n\n\n    }\n}\n\n\n\nexport default Review;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx",["96"],"import React from 'react'\nimport { updateShorthandPropertyAssignment } from 'typescript';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\n\n\n\ntype SignInProps = {\n    token: string,\n    sessionToken: string,\n    reviseToken: (newToken: string) => void,\n    clearToken: (e: any) => void\n}\n\ntype SignInState = {\n    username: string,\n    password: string,\n    setUserLoggedin: boolean,\n    redirect: boolean\n};\n\n\nclass SignIn extends React.Component<SignInProps, SignInState> {\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            setUserLoggedin: false,\n            redirect: false\n        \n\n        }\n        this.signIn = this.signIn.bind(this)\n    }\n\n\n\n    signIn(event: any) {\n        event.preventDefault();\n        console.log('testing signin')\n        fetch('http://localhost:1906/user/signin', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type':\n                    'application/json'\n            }),\n            body: JSON.stringify(this.state),\n        })\n            .then(response => response.json())\n            .then(result => {\n                this.props.reviseToken(result.sessionToken)\n                console.log('sign in completed')\n\n                // history.push('/');\n                window.location.reload(true);\n\n            })\n            .catch(err => console.log(err))\n\n\n\n\n    }\n\n\n    componentDidMount = () => {\n        this.setState({\n            username: '',\n            password: '',\n            setUserLoggedin: true,\n            redirect: true\n\n        })\n    }\n    // setRedirect = () => {\n    //     this.setState({\n    //         redirect: true\n    //     })\n    // }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to='review/' />\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h1 className=\"signinhead\">Sign In</h1>\n                <Form className=\"SignInForm\"onSubmit={this.signIn}>\n                    <FormGroup className=\"signinform\">\n                        <label id=\"username\">Username:</label>\n                        <Input pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" title=\"Please use letters and numbers for your username. The minimum length is 8 characters.\" type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Please enter your username.\" minimumLength={8} required\n                            onChange={(e) => this.setState({ username: e.target.value })} />\n                    </FormGroup>\n                    <FormGroup className=\"signinform\">\n                        <label id=\"password\">Password:</label>\n                        <Input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Please enter your password here\" minimumLength={8} required onChange={(e) => this.setState({ password: e.target.value })} />\n                    </FormGroup>\n                    <Button id=\"SignIn\">SignIn\n                    </Button>\n\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx",["97","98","99","100","101"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport ReviewCard from './ReviewCard';\nimport {Button, Modal, ModalBody, ModalHeader} from 'reactstrap';\ntype ViewProps = {\n    token: string\n    businessid: number\n}\ntype ViewReviewState = {\n    reviewRes: any,\n    modal: boolean\n}\n\nclass ViewReview extends React.Component<ViewProps, ViewReviewState> {\n    constructor(props: ViewProps) {\n        super(props);\n        this.state = {\n            reviewRes: [],\n            modal: false\n        }\n        this.viewReviews = this.viewReviews.bind(this)\n        this.toggle = this.toggle.bind(this)\n\n    }\n\n\n    viewReviews() {\n\n        console.log('Id in the get review fetch', this.props.businessid)\n        fetch(`http://localhost:1906/review/reviews/${this.props.businessid}`,\n            {\n                method: 'GET',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Authorization': this.props.token\n                })\n            })\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    reviewRes: result\n        \n                })\n                console.log('set review res', this.state.reviewRes);\n                console.log('view reviews', result)\n            })\n            .catch(error => console.log('error', error));\n\n\n\n    }\n\n    componentDidMount = () => {\n    \n        this.viewReviews()\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n\n\n\n\n    render() {\n        return (\n            <div>\n                 \n                \n                 <ReviewCard  reviewRes={this.state.reviewRes} token={this.props.token} businessid={this.props.businessid} />\n\n                \n                \n            </div>\n\n\n        )\n\n    }\n}\n\nexport default ViewReview","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx",["102"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ReviewCard.tsx",["103","104","105","106","107","108","109","110","111","112","113"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/EditReview.tsx",["114"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/DeleteReview.tsx",["115"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport {Button} from 'reactstrap';\n\ntype DeleteProps = {\n    reviewid: number,\n    token: string,\n    \n}\n\n\nclass DeleteReview extends React.Component<DeleteProps, {}> {\n    constructor(props: DeleteProps){\n    super(props)\n    console.log('delete review token', this.props.token)\n    this.submitDeleteReview = this.submitDeleteReview.bind(this)\n        \n    \n    }\n\n    submitDeleteReview (event: any) {\n        event.preventDefault();\n        console.log(this.props);\n        console.log('delete review ran', this.props.reviewid)\n        fetch(`http://localhost:1906/review/delete/${this.props.reviewid}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        })\n        .then(response => {\n            response.json()\n            window.location.reload(false)\n        })\n    }\n\n    render(): any {\n        return (\n            <div>\n                <Button onClick={this.submitDeleteReview}>Delete Review</Button>\n            </div>\n\n\n\n        )\n\n    }\n}\n\nexport default DeleteReview;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/Business.tsx",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/CreateBusiness.tsx",["116"],"import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal } from 'reactstrap';\n\ntype CreateBusinessProps = {\n    sessionToken: string,\n    token: string,\n    businessToken: string,\n    business: any,\n    businessid: any,\n    businessRes: any,\n    businessOwner: string,\n    businessName: string,\n    address: string,\n    zipcode: string,\n    businessFunction: string\n}\n\ntype CreateBusinessState = {\n    businessid: any,\n    businessOwner: string,\n    businessName: string,\n    address: string,\n    zipcode: string,\n    businessFunction: string,\n    submittedBusiness: boolean,\n    modal: boolean\n}\n\nclass CreateBusiness extends React.Component<CreateBusinessProps, CreateBusinessState> {\n    constructor(props: CreateBusinessProps) {\n        super(props);\n        this.state = {\n        \n            businessid: '',\n            businessOwner: '',\n            businessName: '',\n            address: '',\n            zipcode: '',\n            businessFunction: '',\n            submittedBusiness: false,\n            modal: false\n        }\n        console.log('business token ---->', this.props.businessToken)\n        this.createBusiness = this.createBusiness.bind(this)\n        this.toggle = this.toggle.bind(this)\n    }\n\n    createBusiness(event: any) { \n        event.preventDefault();\n        fetch('http://localhost:1906/business/', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token,\n            }),\n            body: JSON.stringify({\n                business: {\n                    businessOwner: this.state.businessOwner,\n                    businessName: this.state.businessName,\n                    address: this.state.address,\n                    zipcode: this.state.zipcode,\n                    businessFunction: this.state.businessFunction\n                }\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            console.log(result)\n        })\n        .catch(error => console.log('error', error));\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            businessid: '',\n            businessOwner: '',\n            businessName: '',\n            address: '',\n            zipcode: '',\n            businessFunction: ''\n        })\n    }\n\n    businessAdded = () => {\n        this.setState({\n            submittedBusiness: true\n        })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n\n\n    render (): any {\n        return (\n            <div>\n                \n\n                {this.state.submittedBusiness === true ?\n                null\n            :\n            <div>\n                <h3>Create Business</h3>\n                <Form onSubmit={this.createBusiness}>\n                <FormGroup>\n                                <Label for=\"businessOwner\"></Label>\n                                <Input type=\"text\" name=\"businessOwner\" value={this.state.businessOwner} id=\"business-owner-entry\" required placeholder=\"Business Owner\" onChange={(e) => this.setState({ businessOwner: e.target.value })} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"businessName\"></Label>\n                                <Input type=\"text\" name=\"businessName\" value={this.state.businessName} id=\"businessName-entry\" required placeholder=\"Business Name\" onChange={(e) => this.setState({ businessName: e.target.value })} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"address\"></Label>\n                                <Input type=\"text\" name=\"address\" value={this.state.address} id=\"address-entry\" required placeholder=\"Address\" onChange={(e) => this.setState({ address: e.target.value })} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"zipcode\"></Label>\n                                <Input type=\"text\" name=\"zipcode\" value={this.state.zipcode} id=\"zipcode-entry\" required placeholder=\"Zipcode\" onChange={(e) => this.setState({ zipcode: e.target.value })} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"businessFunction\"></Label>\n                                <Input type=\"text\" name=\"businessFunction\" value={this.state.businessFunction} id=\"business-function-entry\" required placeholder=\"Business Function\" onChange={(e) => this.setState({ businessFunction: e.target.value })} />\n                            </FormGroup>\n                            <Button onClick={this.toggle}>Submit</Button>\n                            <Button onClick={this.toggle}>Cancel</Button>\n                </Form>\n                </div>}\n            </div>\n        )\n    }\n\n\n}\n\nexport default CreateBusiness;\n","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/ViewBusiness.tsx",["117"],"import React from 'react';\nimport BusinessCard from './BusinessCard'\n\ntype ViewBusinessProps = {\n    sessionToken: string,\n    token: string,\n    businessToken: string,\n    business: any,\n    businessid: any,\n    businessRes: any,\n    businessOwner: string,\n    businessName: string,\n    address: string,\n    zipcode: string,\n    businessFunction: string\n\n}\n\ntype ViewBusinessState = {\n    businessRes: any\n}\n\nclass ViewBusiness extends React.Component<ViewBusinessProps, ViewBusinessState> {\n    constructor(props:ViewBusinessProps) {\n        super(props);\n        this.state= {\n            businessRes: []\n        }\n        this.viewBusinesses = this.viewBusinesses.bind(this)\n    }\n\n    viewBusinesses() {\n        fetch('http://localhost:1906/business/', {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            this.setState({\n                businessRes: result\n            })\n            console.log('set business res', this.state.businessRes);\n            console.log('view businesses', result)\n        })\n        .catch(error => console.log('error', error));\n    }\n\n    componentDidMount = () => {\n        this.viewBusinesses()\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 className=\"current-module\"></h3>\n                <BusinessCard  token={this.props.token} businessToken={this.props.businessToken} business={this.props.business} businessid={this.props.businessid} businessRes={this.state.businessRes} businessOwner={this.props.businessOwner} businessName={this.props.businessName} address={this.props.address} zipcode= {this.props.zipcode} businessFunction={this.props.businessFunction}  />\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n\n}\nexport default ViewBusiness;\n\n","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/BusinessCard.tsx",["118","119","120"],"import React from 'react';\nimport { Button, Container, Modal, Row, Col } from 'reactstrap'\n\n\n\nimport Review from '../Reviews/Review';\nimport { stringify } from 'querystring';\n\ntype BusinessCardProps = {\n\n    token: string,\n    businessToken: string,\n    business: any,\n    businessid: number,\n    businessRes: any,\n    businessOwner: string,\n    businessName: string,\n    address: string,\n    zipcode: string,\n    businessFunction: string,\n\n\n\n}\n\ntype BusinessCardState = {\n    businessid: number,\n    modal: boolean\n}\n\nclass BusinessCard extends React.Component<BusinessCardProps, BusinessCardState> {\n    constructor(props: BusinessCardProps) {\n        super(props);\n        this.state = {\n            businessid: 0,\n            modal: false\n        }\n        this.toggle = this.toggle.bind(this)\n    }\n\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n\n                {this.props.businessRes.map((business: any) => {\n                    console.log('business card', business)\n\n                    return (\n                        <div onMouseEnter={() => {\n                            this.setState({\n                                businessid: business.id\n                            }); console.log(typeof (business.id))\n                        }} key={business.id}\n                            className=\"businesscard\">\n                            <Container>\n                                <Row>\n                                    <Col>\n                                        <h5>Business Name:</h5>\n                                        <h6>{business.businessName}</h6>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h5>Business Owner:</h5>\n                                        <h6>{business.businessOwner}</h6>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h5>Address:</h5>\n                                        <h6>{business.address}</h6>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h5>Zipcode:</h5>\n                                        <h6>{business.zipcode}</h6>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h5>Business Function:</h5>\n                                        <h6>{business.businessFunction}</h6>\n                                    </Col>\n                                </Row>\n                            </Container>\n                            <br></br>\n                            <br></br>\n                            <br></br>\n\n                            <div>\n                                <Review businessid={this.state.businessid} token={this.props.token} />\n\n                            </div>\n                        </div>\n\n                    )\n                })\n\n                }\n\n            </div>\n        )\n    }\n\n\n\n\n\n}\nexport default BusinessCard",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":16},{"ruleId":"125","severity":1,"message":"129","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":34},{"ruleId":"125","severity":1,"message":"130","line":4,"column":35,"nodeType":"127","messageId":"128","endLine":4,"endColumn":40},{"ruleId":"125","severity":1,"message":"131","line":5,"column":26,"nodeType":"127","messageId":"128","endLine":5,"endColumn":29},{"ruleId":"125","severity":1,"message":"132","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":14},{"ruleId":"125","severity":1,"message":"133","line":10,"column":8,"nodeType":"127","messageId":"128","endLine":10,"endColumn":14},{"ruleId":"125","severity":1,"message":"134","line":11,"column":8,"nodeType":"127","messageId":"128","endLine":11,"endColumn":18},{"ruleId":"125","severity":1,"message":"135","line":158,"column":10,"nodeType":"127","messageId":"128","endLine":158,"endColumn":23},{"ruleId":"125","severity":1,"message":"136","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"137","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"125","severity":1,"message":"138","line":2,"column":18,"nodeType":"127","messageId":"128","endLine":2,"endColumn":21},{"ruleId":"125","severity":1,"message":"131","line":2,"column":23,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"133","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":22,"column":5,"nodeType":"141","messageId":"142","endLine":24,"endColumn":6},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"143","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":23},{"ruleId":"125","severity":1,"message":"144","line":6,"column":18,"nodeType":"127","messageId":"128","endLine":6,"endColumn":23},{"ruleId":"125","severity":1,"message":"131","line":6,"column":30,"nodeType":"127","messageId":"128","endLine":6,"endColumn":33},{"ruleId":"125","severity":1,"message":"145","line":7,"column":10,"nodeType":"127","messageId":"128","endLine":7,"endColumn":19},{"ruleId":"125","severity":1,"message":"146","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":43},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"147","line":4,"column":9,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"144","line":4,"column":17,"nodeType":"127","messageId":"128","endLine":4,"endColumn":22},{"ruleId":"125","severity":1,"message":"148","line":4,"column":24,"nodeType":"127","messageId":"128","endLine":4,"endColumn":33},{"ruleId":"125","severity":1,"message":"149","line":4,"column":35,"nodeType":"127","messageId":"128","endLine":4,"endColumn":46},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"147","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"144","line":2,"column":18,"nodeType":"127","messageId":"128","endLine":2,"endColumn":23},{"ruleId":"125","severity":1,"message":"149","line":2,"column":25,"nodeType":"127","messageId":"128","endLine":2,"endColumn":36},{"ruleId":"125","severity":1,"message":"148","line":2,"column":38,"nodeType":"127","messageId":"128","endLine":2,"endColumn":47},{"ruleId":"125","severity":1,"message":"150","line":2,"column":49,"nodeType":"127","messageId":"128","endLine":2,"endColumn":60},{"ruleId":"125","severity":1,"message":"151","line":2,"column":62,"nodeType":"127","messageId":"128","endLine":2,"endColumn":70},{"ruleId":"125","severity":1,"message":"152","line":2,"column":72,"nodeType":"127","messageId":"128","endLine":2,"endColumn":80},{"ruleId":"125","severity":1,"message":"153","line":2,"column":82,"nodeType":"127","messageId":"128","endLine":2,"endColumn":86},{"ruleId":"125","severity":1,"message":"154","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"125","severity":1,"message":"134","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":8,"column":10,"nodeType":"127","messageId":"128","endLine":8,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"144","line":2,"column":49,"nodeType":"127","messageId":"128","endLine":2,"endColumn":54},{"ruleId":"155","severity":1,"message":"156","line":58,"column":17,"nodeType":"157","endLine":58,"endColumn":48},{"ruleId":"125","severity":1,"message":"147","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":16},{"ruleId":"125","severity":1,"message":"144","line":2,"column":29,"nodeType":"127","messageId":"128","endLine":2,"endColumn":34},{"ruleId":"125","severity":1,"message":"145","line":7,"column":10,"nodeType":"127","messageId":"128","endLine":7,"endColumn":19},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'isConstructorDeclaration' is defined but never used.","'Route' is defined but never used.","'Col' is defined but never used.","'SignUp' is defined but never used.","'Review' is defined but never used.","'ViewReview' is defined but never used.","'businessToken' is defined but never used.","'useImperativeHandle' is defined but never used.","'useHistory' is defined but never used.","'Row' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'tokenToString' is defined but never used.","'Modal' is defined but never used.","'stringify' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","'Button' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'Collapse' is defined but never used.","'CardBody' is defined but never used.","'Card' is defined but never used.","'CreateReview' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]