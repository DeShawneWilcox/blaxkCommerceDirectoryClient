[{"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx":"1","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts":"2","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx":"3","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx":"4","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx":"5","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx":"6","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx":"7","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx":"8","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx":"9"},{"size":500,"mtime":1608250685448,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1608250685458,"results":"12","hashOfConfig":"11"},{"size":2405,"mtime":1611269382061,"results":"13","hashOfConfig":"11"},{"size":4501,"mtime":1611279417787,"results":"14","hashOfConfig":"11"},{"size":1504,"mtime":1611105833646,"results":"15","hashOfConfig":"11"},{"size":1642,"mtime":1611277253276,"results":"16","hashOfConfig":"11"},{"size":2590,"mtime":1611271564066,"results":"17","hashOfConfig":"11"},{"size":307,"mtime":1611105132331,"results":"18","hashOfConfig":"11"},{"size":2769,"mtime":1611279736903,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"kfu6vx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx",[],["44","45"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx",["46","47","48","49"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport { isConstructorDeclaration } from 'typescript';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport './App.css';\nimport Menu from './Components/Menu/Menu'\nimport SignUp from './Components/Menu/SignUp'\nimport Review from './Components/Reviews/Review'\n\n\n\n\ntype SessionState = {\n  token: string,\n  sessionToken: string,\n  newToken: string,\n  adminToken: string,\n  businessToken: string\n};\n\n\n\n\nclass App extends React.Component<{},SessionState> {\n  constructor(props: SessionState) {\n    super(props)\n    this.state= {\n      token: '',\n      sessionToken: '',\n      newToken: '',\n      adminToken: '',\n      businessToken: ''\n    } \n   \n  }\n\n  \n  \n  componentDidMount= () => {\n    if (localStorage.getItem('token')) {\n    this.setState({\n      sessionToken: localStorage.getItem('token')||'',\n      token: localStorage.getItem('token')|| '',\n      newToken: localStorage.getItem('token')|| '',\n      adminToken: localStorage.getItem('token')|| '',\n      businessToken: localStorage.getItem('token')|| ''\n    })\n    \n    \n   \n  }\n}\n\nreviseToken  (newToken: string)  {\n  this.componentDidCatch = () => {\n   this.setState({\n     sessionToken: newToken\n   })\n   \n }\n console.log('View SessionToken ---> ', newToken);\n }\n\nclearToken () {\nthis.componentDidCatch = () => {\n  localStorage.clear()\n  this.setState({\n    sessionToken: ''\n  })\n}\n\n\nconsole.log('Confirm token is cleared.', localStorage.token);\n}\n\nprotectedViews = (props: SessionState) => {\n  return (this.state.sessionToken === localStorage.getItem('token') ? <Review token={this.state.token} sessionToken={this.state.sessionToken}  /> \n  : <p id=\"tokenissue\">Sign Up or Sign In to have access to this content.</p>)\n}\n\n\n  render() {\n   return (\n      <div>\n        <Container>\n          <Row>\n            <Router>\n              <Menu reviseToken={this.reviseToken} clearToken={this.clearToken} token={this.state.token} sessionToken={this.state.sessionToken}/>\n              <SignUp reviseToken={this.reviseToken} clearToken={this.clearToken} token={this.state.token} sessionToken={this.state.sessionToken}/>\n            </Router>\n          </Row>\n          <Row>\n            {this.protectedViews}\n          </Row>\n        </Container>\n        \n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\nexport default App;\n","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx",["50","51"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx",["52","53","54"],"import React from 'react'\nimport { Button, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\n\ntype MenuProps = {\n    reviseToken: (newToken: string) => void,\n    clearToken: () => void,\n    sessionToken: string,\n    token: string\n    \n}\n\n\n\n\n\nclass Menu extends React.Component<MenuProps,{}> {\n    constructor(props:MenuProps) {\n        super(props)\n    }\n\n    \n    render() {\n        return (\n            <Router>\n                <div className=\"menu\">\n                    <Button><Link to=\"/\">Home</Link></Button>\n                    <Button><Link to=\"SignUp\">Sign Up</Link></Button>\n                    <Button><Link to=\"SignIn\">Sign In</Link></Button>\n                    <Button >Logout</Button>\n                </div>\n                <div className=\"menu-route\">\n                    <Switch>\n                        <Route exact path=\"/\"></Route>\n                        <Route exact path=\"/signup\"><SignUp token={this.props.token}sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                        <Route exact path=\"/signin\"><SignIn token={this.props.token} sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                    </Switch>\n                </div>\n\n\n            </Router>\n        )\n    }\n}\n\nexport default Menu;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx",["55","56"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx",["57"],"import React from 'react'\nimport { updateShorthandPropertyAssignment } from 'typescript';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';;\n\ntype SignInProps = {\n    token: string,\n    sessionToken: string,\n    reviseToken: (newToken: string) => void,\n    clearToken: () => void\n}\n\ntype SignInState = {\n    username: string,\n    password: string,\n    setUserLoggedin: boolean\n};\n\n\nclass SignIn extends React.Component<SignInProps, SignInState> {\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            setUserLoggedin: false\n\n        }\n        this.signIn=this.signIn.bind(this)\n    }\n\n    signIn(event: any) {\n        event.preventDefault();\n        console.log('testing signin')\n        fetch('http://localhost:1906/user/signin', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type':\n                    'application/json'\n            }),\n            body: JSON.stringify(this.state),\n        })\n            .then(response => response.json())\n            .then(result => {\n                this.props.reviseToken(result.sessionToken)\n                console.log('sign in completed')\n            })\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            username: '',\n            password: '',\n            setUserLoggedin: true\n            \n        })\n    }\n    render() {\n        return (\n            <div>\n                <h1>Sign In</h1>\n                <Form onSubmit={this.signIn}>\n                    <FormGroup>\n                        <label id=\"username\">username</label>\n                        <Input pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" title=\"Please use letters and numbers for your username. The minimum length is 8 characters.\" type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Please enter your username.\" minimumLength={8} required\n                            onChange={(e) => this.setState({ username: e.target.value })} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"password\">password</label>\n                        <Input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Please enter your password here\" minimumLength={8} required onChange={(e) => this.setState({ password: e.target.value })} />\n                    </FormGroup>\n                    <Button id=\"SignIn\">SignIn\n                    </Button>\n\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx",["58"],"import React from 'react';\nimport { render } from '@testing-library/react';\ntype ViewProps = {\n    token: string,\n    sessionToken: string,\n}\n\nclass Viewreview extends React.Component<ViewProps> {\n\n\n    render() {\n        return (\n            <div></div>\n        \n\n\n    )\n\n    }\n}\n\nexport default Viewreview","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx",["59"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\ntype CreateReviewProps = {\n    token: string,\n\n\n}\n\ntype CreateReviewState = {\n    title: string,\n    entry: string,\n    submittedReview: boolean\n}\n\n\nclass Createreview extends React.Component<CreateReviewProps, CreateReviewState> {\n    constructor(props: CreateReviewProps) {\n        super(props);\n        this.state = {\n            title: '',\n            entry: '',\n            submittedReview: false\n        }\n        this.createReview = this.createReview.bind(this)\n    }\n\n    createReview(event: any) {\n        event.preventDefault();\n        fetch('http://localhost:1906/review/', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({\n                'review': {\n                    'title': this.state.title,\n                    'entry': this.state.entry\n\n                }\n            })\n        })\n            .then(response => response.json())\n            .then(result => {\n                console.log(result)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            title: '',\n            entry: '',\n            submittedReview: true\n\n        })\n\n    }\n\n\n\n\n\n    render(): any {\n        return (\n            <div>\n                {\n                    this.state.submittedReview === true ?\n                        null\n                        :\n                        <div>\n                            <h3>Create Question</h3>\n\n                            <Form onSubmit={this.createReview}>\n                                <FormGroup>\n                                    <Label for=\"title\"></Label>\n                                    <Input type=\"text\" name=\"title\" value={this.state.title} id=\"review-title-entry\" required placeholder=\"please enter a review title\" onChange={(e) => this.setState({ title: e.target.value })} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"entry\"></Label>\n                                    <Input type=\"text\" name=\"title\" value={this.state.entry} id=\"review-entry\" required placeholder=\"please enter a review\" onChange={(e) => this.setState({ entry: e.target.value })} />\n                                </FormGroup>\n                                <Button>Submit</Button>\n                            </Form>\n                        </div>\n                }\n            </div>\n\n\n\n        )\n\n    }\n}\n\n\nexport default Createreview;;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":34},{"ruleId":"64","severity":1,"message":"69","line":4,"column":35,"nodeType":"66","messageId":"67","endLine":4,"endColumn":40},{"ruleId":"64","severity":1,"message":"70","line":5,"column":26,"nodeType":"66","messageId":"67","endLine":5,"endColumn":29},{"ruleId":"64","severity":1,"message":"71","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"72","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":20},{"ruleId":"64","severity":1,"message":"73","line":2,"column":18,"nodeType":"66","messageId":"67","endLine":2,"endColumn":21},{"ruleId":"64","severity":1,"message":"70","line":2,"column":23,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":20,"column":5,"nodeType":"76","messageId":"77","endLine":22,"endColumn":6},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"78","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":23},{"ruleId":"64","severity":1,"message":"79","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":43},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'isConstructorDeclaration' is defined but never used.","'Route' is defined but never used.","'Col' is defined but never used.","'useImperativeHandle' is defined but never used.","'useHistory' is defined but never used.","'Row' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'tokenToString' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","no-global-assign","no-unsafe-negation"]