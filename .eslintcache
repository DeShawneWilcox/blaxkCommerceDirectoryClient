[{"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx":"1","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts":"2","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx":"3","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx":"4","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx":"5","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx":"6","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx":"7","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx":"8","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx":"9","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ReviewCard.tsx":"10","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/EditReview.tsx":"11","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/DeleteReview.tsx":"12"},{"size":500,"mtime":1608250685448,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608250685458,"results":"15","hashOfConfig":"14"},{"size":2423,"mtime":1611449369520,"results":"16","hashOfConfig":"14"},{"size":4501,"mtime":1611279417787,"results":"17","hashOfConfig":"14"},{"size":1504,"mtime":1611105833646,"results":"18","hashOfConfig":"14"},{"size":2211,"mtime":1611450134372,"results":"19","hashOfConfig":"14"},{"size":2590,"mtime":1611271564066,"results":"20","hashOfConfig":"14"},{"size":1679,"mtime":1611446965353,"results":"21","hashOfConfig":"14"},{"size":2882,"mtime":1611426095701,"results":"22","hashOfConfig":"14"},{"size":2347,"mtime":1611447105661,"results":"23","hashOfConfig":"14"},{"size":238,"mtime":1611369550595,"results":"24","hashOfConfig":"14"},{"size":241,"mtime":1611369601026,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kfu6vx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx",[],["57","58"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx",["59","60","61","62"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx",["63","64"],"import React, { useImperativeHandle } from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\ntype SignUpProps = {\n    token: string,\n    sessionToken: string,\n    reviseToken: (newToken: string) => void,\n    clearToken: () => void\n}\n\ntype UserState = {\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    admin: boolean,\n    businessOwner: boolean,\n    setUserSignup: boolean\n}\n\n\nclass SignUp extends React.Component<SignUpProps, UserState> {\n    constructor(props: SignUpProps) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            admin: false,\n            businessOwner: false,\n            setUserSignup: false,\n        }\n        this.signUp=this.signUp.bind(this)\n    }\n\n\n\n    signUp(event: any) {\n        event.preventDefault()\n        fetch('http://localhost:1906/user/signup', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify(this.state)\n        })\n            .then(response => response.json())\n            .then(result => {\n                this.props.reviseToken(result.sessionToken)\n                \n                console.log('Signup completed.')\n                // localStorage.setItem('SignUp', JSON.stringify({\n                //     signUp: true,\n                //     token: result.token\n                // }))\n                // history.push('/');\n                // window.location.reload(true);\n\n            })\n            .catch(error=> console.log('error', error));\n            \n    }\n\n    componentDidMount = () => {\n        this.setState({\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            admin: true,\n            businessOwner: true,\n           setUserSignup: true\n            \n        })\n    }\n    render() {\n        return (\n            <div>\n                <h1>Sign Up</h1>\n                <Form onSubmit={this.signUp}>\n                    <FormGroup>\n                        <label id=\"firstname\">First Name</label>\n                        <Input title=\"Please enter your first name.\" type=\"text\" name=\"firstname\" value={this.state.firstName} placeholder=\"Please enter your first name.\" minimumLength={2} required onChange={(e) => this.setState( { firstName: e.target.value })}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"lastname\">Last Name</label>\n                        <Input title=\"Please enter your last name.\" type=\"text\" name=\"lastname\" value={this.state.lastName} placeholder=\"Please enter your last name.\" minimumLength={2} required onChange={(e) => this.setState( { lastName: e.target.value })}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"username\">Username</label>\n                        <Input pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" title=\"Please use letters and numbers for your username. The minimum length is 8 characters.\" type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Please enter your username.\" minimumLength={8} required \n                        onChange={(e) => this.setState({ username: e.target.value })} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"password\">Password</label>\n                        <Input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Please enter your password here\" minimumLength={8} required onChange={(e) => this.setState({password : e.target.value})} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"admin\">Admin</label>\n                        <Input type=\"checkbox\" name=\"admin\" required onClick={(e) => this.setState({admin : true})} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"businessOwner\">Business Owner</label>\n                        <Input type=\"checkbox\" name=\"businessOwner\" required onClick={(e) => this.setState({admin : true})} />\n                    </FormGroup>\n                    <Button id=\"Sign Up\">\n                        SignUp     \n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx",["65","66","67"],"import React from 'react'\nimport { Button, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\n\ntype MenuProps = {\n    reviseToken: (newToken: string) => void,\n    clearToken: () => void,\n    sessionToken: string,\n    token: string\n    \n}\n\n\n\n\n\nclass Menu extends React.Component<MenuProps,{}> {\n    constructor(props:MenuProps) {\n        super(props)\n    }\n\n    \n    render() {\n        return (\n            <Router>\n                <div className=\"menu\">\n                    <Button><Link to=\"/\">Home</Link></Button>\n                    <Button><Link to=\"SignUp\">Sign Up</Link></Button>\n                    <Button><Link to=\"SignIn\">Sign In</Link></Button>\n                    <Button >Logout</Button>\n                </div>\n                <div className=\"menu-route\">\n                    <Switch>\n                        <Route exact path=\"/\"></Route>\n                        <Route exact path=\"/signup\"><SignUp token={this.props.token}sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                        <Route exact path=\"/signin\"><SignIn token={this.props.token} sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                    </Switch>\n                </div>\n\n\n            </Router>\n        )\n    }\n}\n\nexport default Menu;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx",["68","69","70"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx",["71"],"import React from 'react'\nimport { updateShorthandPropertyAssignment } from 'typescript';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';;\n\ntype SignInProps = {\n    token: string,\n    sessionToken: string,\n    reviseToken: (newToken: string) => void,\n    clearToken: () => void\n}\n\ntype SignInState = {\n    username: string,\n    password: string,\n    setUserLoggedin: boolean\n};\n\n\nclass SignIn extends React.Component<SignInProps, SignInState> {\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            setUserLoggedin: false\n\n        }\n        this.signIn=this.signIn.bind(this)\n    }\n\n    signIn(event: any) {\n        event.preventDefault();\n        console.log('testing signin')\n        fetch('http://localhost:1906/user/signin', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type':\n                    'application/json'\n            }),\n            body: JSON.stringify(this.state),\n        })\n            .then(response => response.json())\n            .then(result => {\n                this.props.reviseToken(result.sessionToken)\n                console.log('sign in completed')\n            })\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            username: '',\n            password: '',\n            setUserLoggedin: true\n            \n        })\n    }\n    render() {\n        return (\n            <div>\n                <h1>Sign In</h1>\n                <Form onSubmit={this.signIn}>\n                    <FormGroup>\n                        <label id=\"username\">username</label>\n                        <Input pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" title=\"Please use letters and numbers for your username. The minimum length is 8 characters.\" type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Please enter your username.\" minimumLength={8} required\n                            onChange={(e) => this.setState({ username: e.target.value })} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"password\">password</label>\n                        <Input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Please enter your password here\" minimumLength={8} required onChange={(e) => this.setState({ password: e.target.value })} />\n                    </FormGroup>\n                    <Button id=\"SignIn\">SignIn\n                    </Button>\n\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx",["72","73"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport ReviewCard from './ReviewCard';\ntype ViewProps = {\n    review: any,\n    reviewRes: any,\n    title: string,\n    entry: string,\n    token: string,\n    sessionToken: string,\n    reviewid: any\n\n}\ntype ViewReviewState = {\n    reviewRes: any\n}\n\nclass ViewReview extends React.Component<ViewProps, ViewReviewState> {\n    constructor(props: ViewProps) {\n        super(props);\n        this.state = {\n            reviewRes: []\n        }\n\n    }\n\n\n    viewReviews() {\n        fetch('http://localhost:1906/review/',\n            {\n                method: 'GET',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Authorization': this.props.token\n                })\n            })\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    reviewRes: result\n        \n                })\n                console.log('set review res', this.state.reviewRes);\n                console.log('view reviews', result)\n            })\n            .catch(error => console.log('error', error));\n\n\n\n    }\n\n    componentDidMount = () => {\n        \n\n        this.viewReviews()\n    }\n\n\n\n\n\n    render() {\n        return (\n            <div>\n                <h3 className=\"current-module\"></h3>\n                <ReviewCard reviewRes={this.state.reviewRes} token={this.props.token}  sessionToken={this.props.sessionToken} title={this.props.title} entry={this.props.entry} reviewid={this.props.reviewid} review={this.props.review} />\n            </div>\n\n\n        )\n\n    }\n}\n\nexport default ViewReview","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx",["74"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\ntype CreateReviewProps = {\n    title: any,\n    entry: any,\n    reviewRes: any,\n    review: any,\n    sessionToken: string,\n    token: string,\n    reviewid: any\n\n\n}\n\ntype CreateReviewState = {\n    title: string,\n    entry: string,\n    submittedReview: boolean\n}\n\n\nclass CreateReview extends React.Component<CreateReviewProps, CreateReviewState> {\n    constructor(props: CreateReviewProps) {\n        super(props);\n        this.state = {\n            title: '',\n            entry: '',\n            submittedReview: false\n        }\n        this.createReview = this.createReview.bind(this)\n    }\n\n    createReview(event: any) {\n        event.preventDefault();\n        fetch('http://localhost:1906/review/', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({\n                'review': {\n                    'title': this.state.title,\n                    'entry': this.state.entry\n\n                }\n            })\n        })\n            .then(response => response.json())\n            .then(result => {\n                console.log(result)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            title: '',\n            entry: '',\n            submittedReview: true\n\n        })\n\n    }\n\n\n\n\n\n    render(): any {\n        return (\n            <div>\n                {\n                    this.state.submittedReview === true ?\n                        null\n                        :\n                        <div>\n                            <h3>Create Question</h3>\n\n                            <Form onSubmit={this.createReview}>\n                                <FormGroup>\n                                    <Label for=\"title\"></Label>\n                                    <Input type=\"text\" name=\"title\" value={this.state.title} id=\"review-title-entry\" required placeholder=\"please enter a review title\" onChange={(e) => this.setState({ title: e.target.value })} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"entry\"></Label>\n                                    <Input type=\"text\" name=\"title\" value={this.state.entry} id=\"review-entry\" required placeholder=\"please enter a review\" onChange={(e) => this.setState({ entry: e.target.value })} />\n                                </FormGroup>\n                                <Button>Submit</Button>\n                            </Form>\n                        </div>\n                }\n            </div>\n\n\n\n        )\n\n    }\n}\n\n\nexport default CreateReview;;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ReviewCard.tsx",["75","76","77","78","79","80","81","82","83","84","85"],"import React from 'react';\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Collapse, CardBody, Card} from 'reactstrap';\nimport CreateReview from './CreateReview';\nimport ViewReview from './ViewReview';\nimport EditReview from './EditReview';\nimport DeleteReview from './DeleteReview';\n\nimport { render } from '@testing-library/react';\n\ntype ReviewCardProps = {\n  review: any,\n  reviewid: any,\n  reviewRes: any,\n  title: string,\n  entry: string,\n  token: string,\n  sessionToken: string\n}\n\n\n\n\n\nclass ReviewCard extends React.Component<ReviewCardProps> {\n\n\n    render() {\n        return (\n            <div>\n                { this.props.reviewRes.map((review: any) => {\n                    console.log('review card', review)\n\n                    return (\n                        <div key={review.id} className=\"reviewcard\">\n                            <h5>Title:</h5>\n                            <h6>{review.title}</h6>\n                            <h5>Please leave a review. Please describe your experience and any other notable things that come to mind.</h5>\n                            <p>{review.entry}</p>\n                            <br></br>\n                            <div className=\"reviewButton\">\n                                <CreateReview token={this.props.token} reviewid={review.id}sessionToken={this.props.sessionToken}  review={this.props.review} \n                                reviewRes={this.props.reviewRes} title={this.props.title} entry={this.props.entry}/>\n                                <br></br>\n                                <ViewReview reviewid={review.id} token={this.props.token} sessionToken={this.props.sessionToken}  review={this.props.review} \n                                reviewRes={this.props.reviewRes} title={this.props.title} entry={this.props.entry}/>\n                                <br></br>\n                                <br></br>\n                                {/* <EditReview token={this.props.token} reviewid={review.id}/>\n                                <DeleteReview token={this.props.token} reviewid={review.id}/> */}\n\n\n                            </div>\n                            </div>\n                            \n                            \n\n                    )\n                })\n\n                }\n            </div>\n        \n\n\n    )\n\n    }\n}\n\nexport default ReviewCard","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/EditReview.tsx",["86"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/DeleteReview.tsx",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":10,"nodeType":"94","messageId":"95","endLine":1,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":34},{"ruleId":"92","severity":1,"message":"97","line":4,"column":35,"nodeType":"94","messageId":"95","endLine":4,"endColumn":40},{"ruleId":"92","severity":1,"message":"98","line":5,"column":26,"nodeType":"94","messageId":"95","endLine":5,"endColumn":29},{"ruleId":"92","severity":1,"message":"99","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"100","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":20},{"ruleId":"92","severity":1,"message":"101","line":2,"column":18,"nodeType":"94","messageId":"95","endLine":2,"endColumn":21},{"ruleId":"92","severity":1,"message":"98","line":2,"column":23,"nodeType":"94","messageId":"95","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":20,"column":5,"nodeType":"104","messageId":"105","endLine":22,"endColumn":6},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"106","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":23},{"ruleId":"92","severity":1,"message":"107","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":19},{"ruleId":"92","severity":1,"message":"108","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":43},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":65,"column":17,"nodeType":"111","endLine":65,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"112","line":2,"column":9,"nodeType":"94","messageId":"95","endLine":2,"endColumn":15},{"ruleId":"92","severity":1,"message":"113","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"114","line":2,"column":24,"nodeType":"94","messageId":"95","endLine":2,"endColumn":35},{"ruleId":"92","severity":1,"message":"115","line":2,"column":37,"nodeType":"94","messageId":"95","endLine":2,"endColumn":46},{"ruleId":"92","severity":1,"message":"116","line":2,"column":48,"nodeType":"94","messageId":"95","endLine":2,"endColumn":59},{"ruleId":"92","severity":1,"message":"117","line":2,"column":61,"nodeType":"94","messageId":"95","endLine":2,"endColumn":69},{"ruleId":"92","severity":1,"message":"118","line":2,"column":71,"nodeType":"94","messageId":"95","endLine":2,"endColumn":79},{"ruleId":"92","severity":1,"message":"119","line":2,"column":81,"nodeType":"94","messageId":"95","endLine":2,"endColumn":85},{"ruleId":"92","severity":1,"message":"120","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"92","severity":1,"message":"121","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'isConstructorDeclaration' is defined but never used.","'Route' is defined but never used.","'Col' is defined but never used.","'useImperativeHandle' is defined but never used.","'useHistory' is defined but never used.","'Row' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'tokenToString' is defined but never used.","'stringify' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Collapse' is defined but never used.","'CardBody' is defined but never used.","'Card' is defined but never used.","'EditReview' is defined but never used.","'DeleteReview' is defined but never used.","no-global-assign","no-unsafe-negation"]