[{"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx":"1","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts":"2","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx":"3","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx":"4","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx":"5","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx":"6","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx":"7","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx":"8","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx":"9","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ReviewCard.tsx":"10","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/EditReview.tsx":"11","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/DeleteReview.tsx":"12","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/Business.tsx":"13","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/CreateBusiness.tsx":"14","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/ViewBusiness.tsx":"15","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/BusinessCard.tsx":"16"},{"size":547,"mtime":1612043846992,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608250685458,"results":"19","hashOfConfig":"18"},{"size":3245,"mtime":1612019133031,"results":"20","hashOfConfig":"18"},{"size":4512,"mtime":1611775222151,"results":"21","hashOfConfig":"18"},{"size":1685,"mtime":1612040760350,"results":"22","hashOfConfig":"18"},{"size":1845,"mtime":1612034969401,"results":"23","hashOfConfig":"18"},{"size":3115,"mtime":1612034211462,"results":"24","hashOfConfig":"18"},{"size":1625,"mtime":1612032545427,"results":"25","hashOfConfig":"18"},{"size":3154,"mtime":1612032649593,"results":"26","hashOfConfig":"18"},{"size":2422,"mtime":1612035649071,"results":"27","hashOfConfig":"18"},{"size":3500,"mtime":1612037391235,"results":"28","hashOfConfig":"18"},{"size":1200,"mtime":1612035841378,"results":"29","hashOfConfig":"18"},{"size":2634,"mtime":1612027935514,"results":"30","hashOfConfig":"18"},{"size":4652,"mtime":1612027900585,"results":"31","hashOfConfig":"18"},{"size":1927,"mtime":1612027972679,"results":"32","hashOfConfig":"18"},{"size":2128,"mtime":1612032408689,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kfu6vx",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/index.tsx",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/reportWebVitals.ts",[],["74","75"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/App.tsx",["76","77","78","79","80","81","82"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport { isConstructorDeclaration } from 'typescript';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport './App.css';\nimport Menu from './Components/Menu/Menu'\nimport SignUp from './Components/Menu/SignUp'\nimport Review from './Components/Reviews/Review'\nimport ViewReview from './Components/Reviews/ViewReview'\nimport Business from './Components/Businesses/Business';\n\n\n\n\ntype SessionState = {\n  token: string,\n  sessionToken: string,\n  newToken: string,\n  adminToken: string,\n  businessToken: string,\n  addReview: boolean,\n  review: any,\n  reviewid: any,\n  reviewRes: any,\n  title: string,\n  entry: string,\n  business: any,\n  businessid: any,\n  businesRes: any,\n  businessOwner: string,\n  businessName: string,\n  address: string,\n  zipcode: number,\n  businessFunction: string\n\n};\n\n\n\n\n\nclass App extends React.Component<{}, SessionState> {\n  constructor(props: SessionState) {\n    super(props)\n    this.state = {\n      token: '',\n      sessionToken: '',\n      newToken: '',\n      adminToken: '',\n      businessToken: '',\n      addReview: false,\n      review: '',\n      reviewid: null,\n      reviewRes: [],\n      title: '',\n      entry: '',\n      business: '',\n      businessid: null,\n      businesRes: [],\n      businessOwner: '',\n      businessName: '',\n      address: '',\n      zipcode: 0,\n      businessFunction: ''\n    }\n    this.reviseToken = this.reviseToken.bind(this)\n    this.clearToken = this.clearToken.bind(this)\n\n  }\n\n\n\n  componentDidMount = () => {\n    if (localStorage.getItem('token')) {\n      this.setState({\n        sessionToken: localStorage.getItem('token') || '',\n        token: localStorage.getItem('token') || '',\n        newToken: localStorage.getItem('token') || '',\n        adminToken: localStorage.getItem('token') || '',\n        businessToken: localStorage.getItem('token') || ''\n      })\n\n\n\n    }\n  }\n\n  reviseToken(newToken: string) {\n    localStorage.setItem('token', newToken)\n    this.setState({\n      token: newToken, sessionToken: newToken\n    })\n\n\n\n\n    console.log('View SessionToken ---> ', newToken);\n  }\n\n  clearToken(e: any) {\n    e.preventDefault()\n    // this.componentDidCatch = () => {\n    localStorage.clear()\n    this.setState({\n      sessionToken: '', token: ''\n    })\n    // this.clearToken = this.clearToken.bind(this)\n    // }\n\n\n    console.log('Confirm token is cleared.', localStorage.token);\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Router>\n              <Menu reviseToken={this.reviseToken} clearToken={this.clearToken} token={this.state.token} sessionToken={this.state.sessionToken} />\n\n\n\n\n\n            </Router>\n          </Row>\n          <Row>\n\n          </Row>\n          <Row>\n            {this.state.token === localStorage.getItem('token') ? <Business businessid={this.state.businessid} token={this.state.token} sessionToken={this.state.sessionToken} businessToken={this.state.businessToken} />\n              : <p id=\"tokenissue\">Sign Up or Sign In to have access to this content.</p>}\n          </Row>\n        </Container>\n\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\nexport default App;\n","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignUp.tsx",["83","84"],"import React, { useImperativeHandle } from 'react';\nimport { Form, FormGroup, Input, Button } from 'reactstrap';\nimport { useHistory } from 'react-router-dom';\ntype SignUpProps = {\n    token: string,\n    sessionToken: string,\n    reviseToken: (newToken: string) => void,\n    clearToken: (e: any) => void\n}\n\ntype UserState = {\n    firstName: string,\n    lastName: string,\n    username: string,\n    password: string,\n    admin: boolean,\n    businessOwner: boolean,\n    setUserSignup: boolean\n}\n\n\nclass SignUp extends React.Component<SignUpProps, UserState> {\n    constructor(props: SignUpProps) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            admin: false,\n            businessOwner: false,\n            setUserSignup: false,\n        }\n        this.signUp=this.signUp.bind(this)\n    }\n\n\n\n    signUp(event: any) {\n        event.preventDefault()\n        fetch('http://localhost:1906/user/signup', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n            body: JSON.stringify(this.state)\n        })\n            .then(response => response.json())\n            .then(result => {\n                this.props.reviseToken(result.sessionToken)\n                \n                console.log('Signup completed.')\n                // localStorage.setItem('SignUp', JSON.stringify({\n                //     signUp: true,\n                //     token: result.token\n                // }))\n                // history.push('/');\n                // window.location.reload(true);\n\n            })\n            .catch(error=> console.log('error', error));\n            \n    }\n\n    componentDidMount = () => {\n        this.setState({\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            admin: true,\n            businessOwner: true,\n           setUserSignup: true\n            \n        })\n    }\n    \n    render() {\n        return (\n            <div>\n                <h1>Sign Up</h1>\n                <Form onSubmit={this.signUp}>\n                    <FormGroup>\n                        <label id=\"firstname\">First Name</label>\n                        <Input title=\"Please enter your first name.\" type=\"text\" name=\"firstname\" value={this.state.firstName} placeholder=\"Please enter your first name.\" minimumLength={2} required onChange={(e) => this.setState( { firstName: e.target.value })}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"lastname\">Last Name</label>\n                        <Input title=\"Please enter your last name.\" type=\"text\" name=\"lastname\" value={this.state.lastName} placeholder=\"Please enter your last name.\" minimumLength={2} required onChange={(e) => this.setState( { lastName: e.target.value })}/>\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"username\">Username</label>\n                        <Input pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\" title=\"Please use letters and numbers for your username. The minimum length is 8 characters.\" type=\"text\" name=\"username\" value={this.state.username} placeholder=\"Please enter your username.\" minimumLength={8} required \n                        onChange={(e) => this.setState({ username: e.target.value })} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"password\">Password</label>\n                        <Input type=\"password\" name=\"password\" value={this.state.password} placeholder=\"Please enter your password here\" minimumLength={8} required onChange={(e) => this.setState({password : e.target.value})} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"admin\">Admin</label>\n                        <Input type=\"checkbox\" name=\"admin\" required onClick={(e) => this.setState({admin : true})} />\n                    </FormGroup>\n                    <FormGroup>\n                        <label id=\"businessOwner\">Business Owner</label>\n                        <Input type=\"checkbox\" name=\"businessOwner\" required onClick={(e) => this.setState({admin : true})} />\n                    </FormGroup>\n                    <Button id=\"Sign Up\">\n                        SignUp     \n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/Menu.tsx",["85","86","87","88"],"import React from 'react'\nimport { Button, Row, Col } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport Review from '../Reviews/Review'\n\ntype MenuProps = {\n    reviseToken: (newToken: string) => void,\n    clearToken: (e: any) => void,\n    sessionToken: string,\n    token: string\n    \n}\n\n\n\n\n\n\nclass Menu extends React.Component<MenuProps,{}> {\n    constructor(props:MenuProps) {\n        super(props)\n    }\n\n    \n    render() {\n        return (\n            <Router>\n                <div className=\"menu\">\n                    <Button color=\"primary\" size=\"lg\"><Link to=\"/\">Home</Link></Button>\n                    <Button color=\"primary\" size=\"lg\"><Link to=\"SignUp\">Sign Up</Link></Button>\n                    <Button color=\"primary\" size=\"lg\"><Link to=\"SignIn\">Sign In</Link></Button>\n                    <Button color=\"primary\" size=\"lg\" onClick={this.props.clearToken}>Logout</Button>\n                </div>\n                <div className=\"menu-route\">\n                    <Switch>\n                        <Route exact path=\"/\"></Route>\n                        <Route exact path=\"/signup\"><SignUp token={this.props.token}sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                        <Route exact path=\"/signin\"><SignIn token={this.props.token} sessionToken={this.props.sessionToken} reviseToken={this.props.reviseToken} clearToken={this.props.clearToken} /></Route>\n                    </Switch>\n                </div>\n\n\n            </Router>\n        )\n    }\n}\n\nexport default Menu;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/Review.tsx",["89","90","91"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { tokenToString } from 'typescript';\nimport ViewReview from './ViewReview';\nimport CreateReview from './CreateReview';\nimport { Button } from 'reactstrap';\nimport { stringify } from 'querystring';\n\n\ntype ReviewProps = {\n    businessid: any,\n    token: string,\n    \n}\n\ntype ReviewState = {\n    addReview: boolean,\n    review: any,\n    reviewid: number,\n    title: string,\n    entry: string,\n}\n\n\n\nclass Review extends React.Component<ReviewProps, ReviewState> {\n    constructor(props: ReviewProps) {\n        super(props);\n        this.state = {\n            addReview: false,\n            review: '',\n            reviewid: 0,\n            title: '',\n            entry: ''\n        \n        }\n         \n    }\n\n    clickAddReview = () => {\n         \n            this.setState({\n                addReview: true\n            })\n        \n    }\n\n    clickViewReview = () => {\n        \n            this.setState({\n                addReview: false\n            })\n            \n    \n\n    }\n\n\n\n    render(): any {\n        return (\n            <div className=\"jumbotron\">\n\n                {this.state.addReview === false ?\n                    <div>\n                        <Button onClick={this.clickAddReview}>Please leave a review.</Button>\n                        <h2>should see reviews</h2>\n                        <ViewReview businessid= {this.props.businessid} token={this.props.token} />\n                    </div>\n\n                    :\n\n                    <div>\n                        <Button onClick={this.clickViewReview}>View all Reviews.</Button>\n                        <CreateReview businessid={this.props.businessid} token={this.props.token} />\n                    </div>\n\n                }\n\n            </div>\n\n\n\n\n        )\n\n\n\n\n\n    }\n}\n\n\n\nexport default Review;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Menu/SignIn.tsx",["92"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ViewReview.tsx",["93","94"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/CreateReview.tsx",["95"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\ntype CreateReviewProps = {\n    token: string\n    businessid: number\n\n}\n\ntype CreateReviewState = {\n    title: string,\n    entry: string,\n    businessid: any,\n    submittedReview: boolean,\n    modal: boolean\n}\n\n\nclass CreateReview extends React.Component<CreateReviewProps, CreateReviewState> {\n    constructor(props: CreateReviewProps) {\n        super(props);\n        this.state = {\n            title: '',\n            entry: '',\n            businessid: 0,\n            submittedReview: false,\n            modal: false\n        }\n        console.log('review token --->', this.props.token)\n         this.createReview = this.createReview.bind(this)\n         this.toggle = this.toggle.bind(this)\n    }\n\n    createReview(event: any) {\n        event.preventDefault();\n        fetch('http://localhost:1906/review/', {\n            method: 'POST',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token,\n            }),\n            body: JSON.stringify({\n                review: {\n                    title: this.state.title,\n                    entry: this.state.entry,\n                    businessid: this.props.businessid\n\n                }\n                \n            })\n        })\n            .then(response => response.json())\n            .then(result => {\n                console.log(result)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n\n    componentDidMount = () => {\n        this.setState({\n            title: '',\n            entry: ''\n            \n\n        })\n\n\n\n    }\n\n    reviewEntered = () => {\n        this.setState({\n            submittedReview: true\n\n        })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n\n\n\n\n    render(): any {\n        return (\n            <div>\n                {this.state.submittedReview === true ?\n                    null\n                    :\n                    <div>\n                        <h3>Create Review</h3>\n                        <Form onSubmit={this.createReview}>\n                            <FormGroup>\n                                <Label for=\"title\"></Label>\n                                <Input type=\"text\" name=\"title\" value={this.state.title} id=\"review-title-entry\" required placeholder=\"please enter a review title\" onChange={(e) => this.setState({ title: e.target.value })} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"entry\"></Label>\n                                <Input type=\"text\" name=\"title\" value={this.state.entry} id=\"review-entry\" required placeholder=\"please enter a review\" onChange={(e) => this.setState({ entry: e.target.value })} />\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </div>\n                }\n            </div>\n\n\n\n        )\n\n    }\n}\n\n\nexport default CreateReview;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/ReviewCard.tsx",["96","97","98","99","100","101","102","103","104","105","106"],"import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Collapse, CardBody, Card } from 'reactstrap';\nimport CreateReview from './CreateReview';\nimport ViewReview from './ViewReview';\nimport EditReview from './EditReview';\nimport DeleteReview from './DeleteReview';\n\nimport { render } from '@testing-library/react';\n\ntype ReviewCardProps = {\n    //   review: any,\n    //   reviewid: any,\n    reviewRes: any,\n    //   title: string,\n    //   entry: string,\n    token: string,\n    businessid: number\n}\n\ntype ReviewCardState = {\n    reviewid: number,\n    \n}\n\n\n\n\nclass ReviewCard extends React.Component<ReviewCardProps, ReviewCardState> {\n    constructor(props: ReviewCardProps) {\n        super(props);\n        this.state ={\n            reviewid: 0\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                { this.props.reviewRes.map((review: any) => {\n                    console.log('review card', review)\n\n                    return (\n                        <div onMouseEnter={()=> {\n                            this.setState({\n                                reviewid: review.id}); }}key={review.id} className=\"reviewcard\">\n                            <h5>Title:</h5>\n                            <h6>{review.title}</h6>\n                            <h5>Please leave a review. Please describe your experience and any other notable things that come to mind.</h5>\n                            <p>{review.entry}</p>\n                            <br></br>\n                            <div className=\"reviewButton\">\n                                {/* <CreateReview token={this.props.token} reviewid={review.id}sessionToken={this.props.sessionToken}  review={this.props.review} \n                                reviewRes={this.props.reviewRes} title={this.props.title} entry={this.props.entry}/> */}\n                                <br></br>\n                                <br></br>\n                                <br></br>\n                                <EditReview token={this.props.token} reviewid={this.state.reviewid} />\n                                <DeleteReview token={this.props.token} reviewid={this.state.reviewid} \n                                     />\n\n\n\n                            </div>\n                        </div>\n\n\n\n                    )\n                })\n\n                }\n            </div>\n\n\n\n        )\n\n    }\n}\n\nexport default ReviewCard","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/EditReview.tsx",["107"],"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Button, Form, FormGroup, Label, Input, Modal } from 'reactstrap';\n\ntype EditProps = {\n    token: string,\n    reviewid: number,\n    \n\n\n}\n\ntype EditState = {\n    title: string,\n    entry: string,\n    editedReview: boolean,\n    modal: boolean\n\n\n}\n\n\n\n\nclass EditReview extends React.Component<EditProps, EditState> {\n    constructor(props: EditProps) {\n        super(props);\n        this.state = {\n            title: '',\n            entry: '',\n            editedReview: false,\n            modal: false\n\n\n        }\n        this.editReview = this.editReview.bind(this)\n        this.toggle = this.toggle.bind(this)\n\n    }\n\n    editReview(event: any) {\n        event.preventDefault();\n        fetch(`http://localhost:1906/review/${this.props.reviewid}`, {\n            method: 'PUT',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            }),\n            body: JSON.stringify({\n                review: {\n                    title: this.state.title,\n                    entry: this.state.entry\n                }\n            })\n        })\n            .then(response => response.json())\n            .then(result => {\n                console.log(result)\n                // window.location.reload(false)\n            })\n            .catch(error => console.log('error', error));\n    }\n\n    componentDidMount = () => {\n        this.setState({\n            title: '',\n            entry: ''\n        })\n    }\n\n    reviewEdited = () => {\n        this.setState({\n            editedReview: true\n        })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n\n\n    render(): any {\n        return (\n            <div>\n                <Button color=\"primary\" class=\"review-button\" onClick={this.toggle}>Edit Review</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    {\n                        this.state.editedReview === true ?\n                            <div>\n                                <h3>Your review has been edited.</h3>\n                            </div>\n                            :\n                            <div>\n                                <h3 className=\"current-module\" >Edit Review</h3>\n                                <Form onSubmit={this.editReview}>\n                                    <FormGroup>\n                                        <Label for=\"title\"> </Label>\n                                        <Input type=\"text\" name=\"title\" id=\"review-title\" required placeholder=\"edit title\" onChange={(e) => this.setState({ title: e.target.value })} />\n                                    </FormGroup>\n\n                                    <FormGroup>\n                                        <Label for=\"entry\"> </Label>\n                                        <Input type=\"text\" name=\"entry\" id=\"review-entry\" required placeholder=\"edit review entry\" onChange={(e) => this.setState({ entry: e.target.value })} />\n                                    </FormGroup>\n                                    <Button onClick={this.toggle}>Submit</Button>\n                                    <Button onClick={this.toggle}>Cancel</Button>\n                                </Form>\n                            </div>\n                    }\n                </Modal>\n\n\n            </div>\n\n\n\n        )\n\n    }\n}\n\nexport default EditReview;","/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Reviews/DeleteReview.tsx",["108"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/Business.tsx",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/CreateBusiness.tsx",[],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/ViewBusiness.tsx",["109"],"/Users/deshawne/Desktop/ElevenFiftyProjects/Projects/blaxkCommerceDirectory/blaxkCommerceDirectoryClient/src/Components/Businesses/BusinessCard.tsx",["110","111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":16},{"ruleId":"117","severity":1,"message":"121","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":34},{"ruleId":"117","severity":1,"message":"122","line":4,"column":35,"nodeType":"119","messageId":"120","endLine":4,"endColumn":40},{"ruleId":"117","severity":1,"message":"123","line":5,"column":26,"nodeType":"119","messageId":"120","endLine":5,"endColumn":29},{"ruleId":"117","severity":1,"message":"124","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":14},{"ruleId":"117","severity":1,"message":"125","line":10,"column":8,"nodeType":"119","messageId":"120","endLine":10,"endColumn":14},{"ruleId":"117","severity":1,"message":"126","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":18},{"ruleId":"117","severity":1,"message":"127","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"128","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"129","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":21},{"ruleId":"117","severity":1,"message":"123","line":2,"column":23,"nodeType":"119","messageId":"120","endLine":2,"endColumn":26},{"ruleId":"117","severity":1,"message":"125","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":22,"column":5,"nodeType":"132","messageId":"133","endLine":24,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"134","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":23},{"ruleId":"117","severity":1,"message":"135","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":19},{"ruleId":"117","severity":1,"message":"136","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":43},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":61,"column":17,"nodeType":"139","endLine":61,"endColumn":48},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"140","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"141","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":23},{"ruleId":"117","severity":1,"message":"142","line":2,"column":25,"nodeType":"119","messageId":"120","endLine":2,"endColumn":36},{"ruleId":"117","severity":1,"message":"143","line":2,"column":38,"nodeType":"119","messageId":"120","endLine":2,"endColumn":47},{"ruleId":"117","severity":1,"message":"144","line":2,"column":49,"nodeType":"119","messageId":"120","endLine":2,"endColumn":60},{"ruleId":"117","severity":1,"message":"145","line":2,"column":62,"nodeType":"119","messageId":"120","endLine":2,"endColumn":70},{"ruleId":"117","severity":1,"message":"146","line":2,"column":72,"nodeType":"119","messageId":"120","endLine":2,"endColumn":80},{"ruleId":"117","severity":1,"message":"147","line":2,"column":82,"nodeType":"119","messageId":"120","endLine":2,"endColumn":86},{"ruleId":"117","severity":1,"message":"148","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":20},{"ruleId":"117","severity":1,"message":"126","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":8,"column":10,"nodeType":"119","messageId":"120","endLine":8,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":58,"column":17,"nodeType":"139","endLine":58,"endColumn":48},{"ruleId":"117","severity":1,"message":"140","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"141","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":23},{"ruleId":"117","severity":1,"message":"135","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":19},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'isConstructorDeclaration' is defined but never used.","'Route' is defined but never used.","'Col' is defined but never used.","'SignUp' is defined but never used.","'Review' is defined but never used.","'ViewReview' is defined but never used.","'useImperativeHandle' is defined but never used.","'useHistory' is defined but never used.","'Row' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'tokenToString' is defined but never used.","'stringify' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Collapse' is defined but never used.","'CardBody' is defined but never used.","'Card' is defined but never used.","'CreateReview' is defined but never used.","no-global-assign","no-unsafe-negation"]